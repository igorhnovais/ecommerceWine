services:
  wd-postgres:
    image: postgres
    container_name: wd-postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    expose:
      - ${POSTGRES_PORT}
    command: postgres -p ${POSTGRES_PORT}
    env_file:
      - ./node/.env
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - ecommerce_wine

  wd-node:
    container_name: wd-node
    build: ./node
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - wd-postgres
    env_file:
      - ./node/.env
    networks:
      - ecommerce_wine

  wd-react:
    container_name: wd-react
    build: ./react
    volumes:
      - react-volume:/var/www/html
    networks:
      - ecommerce_wine
    env_file:
      - ./react/.env


  wd-nginx_app:
    container_name: wd-nginx_app
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - react-volume:/var/www/html
    depends_on:
      - wd-postgres
      - wd-node
      - wd-react
    networks:
      - ecommerce_wine


networks:
  ecommerce_wine:
    driver: bridge
    
volumes:
  postgres-volume:
  react-volume: